name: üöÄ Build & Release

on:
  push:
    tags: ['v*']

jobs:
  build:
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest]
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v4

    - uses: actions/setup-python@v5
      with:
        python-version: '3.x'

    - uses: microsoft/setup-msbuild@v1
      if: matrix.os == 'windows-latest'

    - name: Configure & build
      shell: bash
      env:
        CI: "1"
      run: |
        if [ "$RUNNER_OS" = "Windows" ]; then
          scripts/windows/setup-deps.bat
          scripts/windows/build-release.bat
        else
          chmod +x scripts/linux/*.sh
          scripts/linux/setup-deps.sh
          rm -rf build
          cmake -S . -B build -G "Unix Makefiles" -DCMAKE_BUILD_TYPE=Release
          cmake --build build --config Release --parallel
        fi

    - name: Package artifacts
      shell: bash
      run: |
        mkdir -p dist/bin dist/lib dist/include

        if [ "$RUNNER_OS" = "Windows" ]; then
          cp build\\bin\\Fractura.exe dist\\bin\\
          cp build\\lib\\SilicaEngine.lib dist\\lib\\
          zipName="Caelis-windows-${GITHUB_REF_NAME}.zip"
          powershell -Command "Compress-Archive -Path dist -DestinationPath $zipName"
        else
          cp build/bin/Fractura dist/bin/
          cp build/lib/libSilicaEngine.a dist/lib/
          zipName="Caelis-linux-${GITHUB_REF_NAME}.zip"
          zip -r $zipName dist
        fi
        echo "ZIP_NAME=$zipName" >> $GITHUB_ENV

    # 6Ô∏è‚É£  Attach to release
    - uses: softprops/action-gh-release@v2
      with:
        files: ${{ env.ZIP_NAME }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
